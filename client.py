# -*- coding: utf-8 -*-
"""client.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f8Z9S3JsoRnR15sPMhlYZb2d1Mcv_R1e
"""

import os
try:
  import boto3
except:
  os.system('pip install boto3')
import numpy as np
import argparse
import ast
from sklearn.preprocessing import RobustScaler

def main():
 
    import json
    try:
      import ember
    except:
      os.system('wget https://github.com/endgameinc/ember/archive/master.zip')
      os.system('unzip master.zip')
      os.system('rm master.zip')
      os.system('cp -r ember-master/* .')
      os.system('rm -r ember-master')
      os.system('pip install -r requirements.txt')
      os.system('python setup.py install')
      import ember

    from sklearn.preprocessing import RobustScaler
    rs = RobustScaler()
       
    parser = argparse.ArgumentParser()
    parser.add_argument("-v", "--featureversion", type=int, default=2, help="EMBER feature version")
    parser.add_argument("binaries", metavar="BINARIES", type=str, nargs="+", help="PE files to classify")
    args = parser.parse_args()

    testpe = open(args.binaries[0],'rb').read()

    extract = ember.PEFeatureExtractor() 
    print("Test1")
    data = extract.feature_vector(testpe)
    print("Test2")
    scaled_data = rs.fit_transform([data])
    Xdata = np.reshape(scaled_data,(1, 2381))
    Xdata= Xdata.tolist()
    print("Test3")
    client = boto3.client('runtime.sagemaker',
				region_name='us-east-1',
				aws_access_key_id='#########', 
				aws_secret_access_key='########',
				aws_session_token='#############')
    print("Test4")
    response = client.invoke_endpoint(EndpointName='sagemaker-tensorflow-serving-2021-10-13-15-46-45-947', ContentType='application/json', Body=json.dumps(Xdata))
    response_body = response['Body']
    out = response_body.read()
    print(out)
    astr = out.decode("UTF-8")
    out = ast.literal_eval(astr)
    print(out['predictions'])
    a = out['predictions']
		
if __name__ == "__main__":
	main()
